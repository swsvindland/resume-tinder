import { type NextPage } from 'next';
import Head from 'next/head';
import { useSession } from 'next-auth/react';
import { api } from '../utils/api';
import type { FC } from 'react';
import { NotAuthorized } from '../components/NotAuthorized';
import { Document, Page, pdfjs } from 'react-pdf';
import { useEffect, useState } from 'react';
import Link from 'next/link';

const Interview: NextPage = () => {
    const { data: sessionData } = useSession();

    if (!sessionData) {
        return <NotAuthorized />;
    }

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
                <div className="container flex flex-col items-center justify-center p-4">
                    <h1 className="mb-4 text-4xl font-extrabold tracking-tight text-white">
                        Sort
                    </h1>
                    <Viewer />
                    <Link
                        className="my-2 rounded-full bg-white/10 px-10 py-3 text-center font-semibold text-white no-underline transition hover:bg-white/20"
                        href="/workflows"
                    >
                        Workflows
                    </Link>
                </div>
            </main>
        </>
    );
};

export default Interview;

const Viewer: FC = () => {
    const [viewing, setViewing] = useState<string | undefined>(undefined);
    const fileQuery = api.file.getAccepted.useQuery();

    useEffect(() => {
        pdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;
    }, []);

    if (fileQuery.isLoading) return <div>Loading...</div>;
    if (!fileQuery.data) return null;

    return (
        <div className="flex flex-col">
            <div className="grid grid-cols-1 gap-4">
                {fileQuery.data.map((file) => (
                    <div
                        key={file.id}
                        className="grid grid-cols-2 items-center gap-4"
                    >
                        <span className="text-white">{file.name}</span>
                        <button
                            onClick={() => setViewing(file.url)}
                            className="rounded-full bg-white/10 px-10 py-3 text-center font-semibold text-white no-underline transition hover:bg-white/20"
                        >
                            View
                        </button>
                    </div>
                ))}
            </div>
            {viewing ? (
                <div className="flex flex-row items-center justify-center">
                    <Document file={viewing}>
                        <Page
                            pageNumber={1}
                            renderTextLayer={false}
                            renderAnnotationLayer={false}
                        />
                    </Document>
                </div>
            ) : null}
        </div>
    );
};
